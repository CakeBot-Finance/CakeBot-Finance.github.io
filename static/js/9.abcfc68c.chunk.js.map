{"version":3,"sources":["../node_modules/eth-provider/node_modules/uuid/lib/rng-browser.js","../node_modules/eth-provider/node_modules/uuid/lib/bytesToUuid.js","../../src/index.ts","../node_modules/eth-provider/browser.js","../node_modules/eth-provider/resolve/index.js","../node_modules/eth-provider/provider/index.js","../node_modules/ethereum-provider/index.js","../node_modules/eth-provider/ConnectionManager/index.js","../node_modules/eth-provider/presets/index.js","../node_modules/eth-provider/connections/injected.js","../node_modules/eth-provider/connections/unavailable.js","../node_modules/eth-provider/connections/ws.js","../node_modules/eth-provider/parse/index.js","../node_modules/eth-provider/connections/http.js","../node_modules/eth-provider/node_modules/uuid/v4.js"],"names":["getRandomValues","crypto","bind","msCrypto","window","rnds8","Uint8Array","module","exports","rnds","Array","r","i","Math","random","byteToHex","toString","substr","buf","offset","bth","join","UserRejectedRequestError","FrameConnector","kwargs","handleNetworkChanged","this","provider","chainId","networkId","handleChainChanged","handleAccountsChanged","account","accounts","handleClose","ethProvider","error","e","deactivate","resolve","require","presets","injected","ethereum","web3","currentProvider","ws","WebSocket","XHR","XMLHttpRequest","__isProvider","connections","ipc","http","targets","options","getProtocol","location","endsWith","startsWith","concat","map","type","protocol","filter","console","log","EventEmitter","EthereumProvider","ConnectionManager","monitor","update","status","emit","check","inSetup","setTimeout","send","on","t","indexOf","setMaxListeners","connection","connected","nextId","promises","subscriptions","checkConnection","payload","id","method","result","reject","params","subscription","event","listener","attemptedNetworkSubscription","startNetworkSubscription","attemptedAccountsSubscription","startAccountsSubscription","_send","listenerCount","subscribe","networkChanged","netId","warn","accountsChanged","Promise","then","length","coinbase","err","Error","code","catch","jsonrpc","promise","requests","all","push","success","_id","removeAllListeners","cb","sendAsyncBatch","_sendBatch","results","entry","index","close","forEach","dev","process","interval","name","connect","message","connectionError","summary","closing","refresh","target","data","clearTimeout","connectTimer","closed","frame","direct","infura","infuraRopsten","infuraRinkeby","infuraKovan","InjectedConnection","_injected","UnavailableConnection","parse","WebSocketConnection","_WebSocket","url","create","socket","addEventListener","payloads","load","isArray","onClose","readyState","CONNECTING","_","JSON","stringify","last","timeout","res","values","replace","split","uuid","HTTPConnection","_XHR","pollId","init","response","pollSubscriptions","subscriptionTimeout","p","n","statusText","internal","xhr","responded","abort","open","setRequestHeader","onerror","ontimeout","onreadystatechange","responseText","rng","bytesToUuid","ii"],"mappings":"iGAOA,IAAIA,EAAqC,oBAAXC,QAA0BA,OAAOD,iBAAmBC,OAAOD,gBAAgBE,KAAKD,SACnE,oBAAbE,UAAsE,mBAAnCC,OAAOD,SAASH,iBAAiCG,SAASH,gBAAgBE,KAAKC,UAEhJ,GAAIH,EAAiB,CAEnB,IAAIK,EAAQ,IAAIC,WAAW,IAE3BC,EAAOC,QAAU,WAEf,OADAR,EAAgBK,GACTA,OAEJ,CAKL,IAAII,EAAO,IAAIC,MAAM,IAErBH,EAAOC,QAAU,WACf,IAAK,IAAWG,EAAPC,EAAI,EAAMA,EAAI,GAAIA,IACN,KAAV,EAAJA,KAAiBD,EAAoB,WAAhBE,KAAKC,UAC/BL,EAAKG,GAAKD,MAAY,EAAJC,IAAa,GAAK,IAGtC,OAAOH,K,mBC1BX,IADA,IAAIM,EAAY,GACPH,EAAI,EAAGA,EAAI,MAAOA,EACzBG,EAAUH,IAAMA,EAAI,KAAOI,SAAS,IAAIC,OAAO,GAiBjDV,EAAOC,QAdP,SAAqBU,EAAKC,GACxB,IAAIP,EAAIO,GAAU,EACdC,EAAML,EAEV,MAAQ,CAACK,EAAIF,EAAIN,MAAOQ,EAAIF,EAAIN,MACjCQ,EAAIF,EAAIN,MAAOQ,EAAIF,EAAIN,MAAO,IAC9BQ,EAAIF,EAAIN,MAAOQ,EAAIF,EAAIN,MAAO,IAC9BQ,EAAIF,EAAIN,MAAOQ,EAAIF,EAAIN,MAAO,IAC9BQ,EAAIF,EAAIN,MAAOQ,EAAIF,EAAIN,MAAO,IAC9BQ,EAAIF,EAAIN,MAAOQ,EAAIF,EAAIN,MACvBQ,EAAIF,EAAIN,MAAOQ,EAAIF,EAAIN,MACvBQ,EAAIF,EAAIN,MAAOQ,EAAIF,EAAIN,OAAQS,KAAK,M,yiDCfxBC,EAAb,YACE,a,aACE,sBACA,KAAY,cAAZ,KACA,2C,EAJJ,2BAQaC,EAAb,YAGE,c,aACE,IAAUC,4BAAV,iBACA,wBAEA,qBAA4B,8BAA5B,IACA,qBAA0B,4BAA1B,IACA,wBAA6B,+BAA7B,IACA,cAAmB,qBAAnB,I,EAVJ,uDAaUC,YAINC,KAAA,WAAgB,CAAEC,SAAUD,KAAZ,SAA2BE,QAASC,KAjBxD,qBAoBUC,YAINJ,KAAA,WAAgB,CAAEE,aAxBtB,wBA2BUG,YAINL,KAAA,WAAgB,CAAEM,QAASC,kBAA+BA,EAAS,MA/BvE,cAkCUC,cAINR,KAAA,kBAtCJ,0B,MA0CSA,K,OAAA,EAAL,WACE,WAAgBS,IAAhB,UAGF,+BACwB,EADxB,wCAEsB,EAFtB,yCAGyB,EAHzB,kCAIe,EAJf,a,gBAMsB,0BAEd,mBAAgCF,EAAhC,MAFc,OAGb,YACL,MAAIG,GAAJ,OAAcA,OACN,IAAN,EAEA,MAPgB,eAAhBJ,GAWN,MAAO,CAAEL,SAAU,EAAZ,SAA2BK,cA/DtC,MAAAK,GAAA,sBAAAA,KAAA,6BAmEI,uBAAOX,KAAP,UAnEJ,MAAAW,GAAA,sBAAAA,KAAA,4BAuEI,uBAAOX,KAAA,cAAP,gBAvEJ,MAAAW,GAAA,sBAAAA,KAAA,4BA2EI,uBAAOX,KAAA,oCAAwC,mBAAgCO,EAAhC,OA3EnD,MAAAI,GAAA,sBAAAA,KAAA,aA8ESC,WACLZ,KAAA,yCACoCA,KADpC,oDAEkCA,KAFlC,qDAGqCA,KAHrC,8CAI2BA,KAJ3B,cA/EJ,S,oBCbA,IAAMa,EAAUC,EAAQ,KAClBb,EAAWa,EAAQ,KACnBC,EAAUD,EAAQ,KAElBE,EAAW,CACfC,SAA4B,qBAAXvC,QAAqD,qBAApBA,OAAOuC,SAA2BvC,OAAOuC,SAAW,KACtGC,KAAwB,qBAAXxC,QAAiD,qBAAhBA,OAAOwC,KAAuBxC,OAAOwC,KAAKC,gBAAkB,MAEtGC,EAAuB,qBAAX1C,QAAsD,qBAArBA,OAAO2C,UAA4B3C,OAAO2C,UAAY,KACnGC,EAAwB,qBAAX5C,QAA2D,qBAA1BA,OAAO6C,eAAiC7C,OAAO6C,eAAiB,KAEhHP,EAASC,WAAUD,EAASC,SAASO,cAAe,GAExD,IAAMC,EAAc,CAClBT,SAAUA,EAASC,UAAYH,EAAQ,IAARA,CAAkCE,EAASE,MAC1EQ,IAAKZ,EAAQ,IAARA,CAAqC,iDAC1CM,GAAIN,EAAQ,IAARA,CAA4BM,GAChCO,KAAMb,EAAQ,IAARA,CAA8BQ,IAGtCzC,EAAOC,QAAU,eAAC8C,EAAD,uDAAW,CAAC,WAAY,SAAUC,EAAlC,uDAA4C,GAA5C,OAAmD5B,EAASwB,EAAaZ,EAAQe,EAASb,GAAUc,K,iCCpB/GC,EAAc,SAAAC,GAClB,MAAiB,aAAbA,EAAgC,WAChCA,EAASC,SAAS,QAAgB,MAClCD,EAASE,WAAW,WAAaF,EAASE,WAAW,SAAiB,KACtEF,EAASE,WAAW,aAAeF,EAASE,WAAW,WAAmB,OACvE,IAGTpD,EAAOC,QAAU,SAAC8C,EAASb,GAAY,MACrC,OAAO,MAAGmB,OAAH,UAAa,GAAGA,OAAON,GAASO,KAAI,SAAAlC,GACzC,OAAIc,EAAQd,GACHc,EAAQd,GAAUkC,KAAI,SAAAJ,GAAQ,MAAK,CAAEK,KAAMnC,EAAU8B,WAAUM,SAAUP,EAAYC,OAErF,CAAEK,KAAM,SAAUL,SAAU9B,EAAUoC,SAAUP,EAAY7B,SAEnEqC,QAAO,SAAArC,GACT,SAAIA,EAASoC,UAA8B,aAAlBpC,EAASmC,QAGhCG,QAAQC,IAAI,qDAAuDvC,EAAS8B,SAAW,MAChF,Q,wCCpBPU,EAAe3B,EAAQ,IACvB4B,EAAmB5B,EAAQ,KAC3B6B,EAAoB7B,EAAQ,KAE5B8B,EAAU,SAAA3C,GACd,SAAS4C,EAAQC,GACf7C,EAAS6C,OAASA,EACd7C,aAAoBwC,GAAcxC,EAAS8C,KAAK,SAAUD,GAHtC,SAKXE,IALW,+DAK1B,gFACM/C,EAASgD,QADf,yCAC+BC,WAAWF,EAAO,MADjD,gCAGc/C,EAASkD,KAAK,eAH5B,mCAIMN,EAAO,WACPK,YAAW,kBAAMF,MAAS,KALhC,wBAOMH,EAAO,aAPb,0DAUIA,EAAO,gBAVX,2DAL0B,sBAsB1B,OAJAA,EAAO,WACPG,IACA/C,EAASmD,GAAG,WAAW,kBAAMJ,OAC7B/C,EAASmD,GAAG,SAAS,kBAAMP,EAAO,mBAC3B5C,GAGTpB,EAAOC,QAAU,SAAC2C,EAAaG,EAASC,GAEtC,GAAIJ,EAAYT,SAASQ,cAAgBI,EAAQO,KAAI,SAAAkB,GAAC,OAAIA,EAAEjB,QAAMkB,QAAQ,aAAe,EAEvF,cADO7B,EAAYT,SAASQ,aACrBoB,EAAQnB,EAAYT,UAE7B,IAAMf,EAAW,IAAIyC,EAAiB,IAAIC,EAAkBlB,EAAaG,EAASC,IAElF,OADA5B,EAASsD,gBAAgB,KAClBX,EAAQ3C,K,qFCnCXyC,E,2CACJ,WAAac,GAAY,wBACvB,gBACKC,WAAY,EACjB,EAAKC,OAAS,EACd,EAAKC,SAAW,GAChB,EAAKC,cAAgB,GACrB,EAAKJ,WAAaA,EAClB,EAAKA,WAAWJ,GAAG,WAAW,kBAAM,EAAKS,qBACzC,EAAKL,WAAWJ,GAAG,SAAS,kBAAM,EAAKL,KAAK,YAC5C,EAAKS,WAAWJ,GAAG,WAAW,SAAAU,GAC5B,IAAQC,EAA8BD,EAA9BC,GAAIC,EAA0BF,EAA1BE,OAAQtD,EAAkBoD,EAAlBpD,MAAOuD,EAAWH,EAAXG,OACT,qBAAPF,EACL,EAAKJ,SAASI,KAChBD,EAAQpD,MAAQ,EAAKiD,SAASI,GAAIG,OAAOxD,GAAS,EAAKiD,SAASI,GAAIlD,QAAQoD,UACrE,EAAKN,SAASI,IAEdC,GAAUA,EAAOV,QAAQ,kBAAoB,IACtD,EAAKP,KAAKe,EAAQK,OAAOC,aAAcN,EAAQK,OAAOF,QACtD,EAAKlB,KAAKiB,EAAQF,EAAQK,QAC1B,EAAKpB,KAAK,OAAQe,OAGtB,EAAKV,GAAG,eAAe,SAACiB,EAAOC,GACf,mBAAVD,GACG,EAAKE,8BAAgC,EAAKd,WAAW,EAAKe,2BAC5C,oBAAVH,IACJ,EAAKI,+BAAiC,EAAKhB,WAAW,EAAKiB,+BA1B7C,E,oEA8BzB,iGAEI1E,KAFJ,SAE+BA,KAAK2E,MAAM,eAF1C,wBAES5B,KAFT,UAEc,UAFd,MAGI/C,KAAKyD,WAAY,EACbzD,KAAK4E,cAAc,oBAAsB5E,KAAKuE,8BAA8BvE,KAAKwE,2BACjFxE,KAAK4E,cAAc,qBAAuB5E,KAAKyE,+BAA+BzE,KAAK0E,4BAL3F,kDAOI1E,KAAKyD,WAAY,EAPrB,0D,uHAUA,gGACEzD,KAAKuE,8BAA+B,EADtC,kBAG+BvE,KAAK6E,UAAU,gBAAiB,kBAH/D,OAGQC,EAHR,OAII9E,KAAKoD,GAAG0B,GAAgB,SAAAC,GAAK,OAAI,EAAKhC,KAAK,iBAAkBgC,MAJjE,gDAMIxC,QAAQyC,KAAK,wCAAb,MANJ,yD,wHASA,gGACEhF,KAAKyE,+BAAgC,EADvC,kBAGgCzE,KAAK6E,UAAU,gBAAiB,mBAHhE,OAGQI,EAHR,OAIIjF,KAAKoD,GAAG6B,GAAiB,SAAA1E,GAAQ,OAAI,EAAKwC,KAAK,kBAAmBxC,MAJtE,gDAMIgC,QAAQyC,KAAK,yCAAb,MANJ,yD,0EASA,WAAU,WACR,OAAO,IAAIE,SAAQ,SAACrE,EAASqD,GAC3B,EAAKS,MAAM,gBAAgBQ,MAAK,SAAA5E,GAC9B,GAAIA,EAAS6E,OAAS,EACpB,EAAK7E,SAAWA,EAChB,EAAK8E,SAAW9E,EAAS,GACzB,EAAKwC,KAAK,UACVlC,EAAQN,OACH,CACL,IAAM+E,EAAM,IAAIC,MAAM,6BACtBD,EAAIE,KAAO,KACXtB,EAAOoB,OAERG,MAAMvB,Q,mBAGb,SAAOF,GAAqB,WAAbG,EAAa,uDAAJ,GACtB,IAAKH,GAA4B,kBAAXA,EAAqB,OAAO,IAAIuB,MAAM,iCAC5D,KAAMpB,aAAkBnF,OAAQ,OAAO,IAAIuG,MAAM,gCACjD,IAAMzB,EAAU,CAAE4B,QAAS,MAAO3B,GAAI/D,KAAK0D,SAAUM,SAAQG,UACvDwB,EAAU,IAAIT,SAAQ,SAACrE,EAASqD,GAAa,EAAKP,SAASG,EAAQC,IAAM,CAAElD,UAASqD,aAE1F,OADAlE,KAAKwD,WAAWL,KAAKW,GACd6B,I,kBAET,WACE,OAAO3F,KAAK2E,MAAL,MAAA3E,KAAA,a,wBAET,SAAY4F,GAAU,WACpB,OAAOV,QAAQW,IAAID,EAASzD,KAAI,SAAA2B,GAAO,OAAI,EAAKa,MAAMb,EAAQE,OAAQF,EAAQK,c,uBAEhF,SAAW/B,EAAM4B,GAAqB,WAAbG,EAAa,uDAAJ,GAChC,OAAOnE,KAAK2E,MAAMvC,EAAX,CAAkB4B,GAAlB,SAA6BG,KAASgB,MAAK,SAAApB,GAEhD,OADA,EAAKH,cAAckC,KAAK/B,GACjBA,O,yBAGX,SAAa3B,EAAM2B,GAAI,WACrB,OAAO/D,KAAK2E,MAAMvC,EAAM,CAAC2B,IAAKoB,MAAK,SAAAY,GACjC,GAAIA,EAGF,OAFA,EAAKnC,cAAgB,EAAKA,cAActB,QAAO,SAAA0D,GAAG,OAAIA,IAAQjC,KAC9D,EAAKkC,mBAAmBlC,GACjBgC,O,uBAIb,SAAWjC,EAASoC,GAClB,OAAKA,GAAoB,oBAAPA,EACbpC,EAGDA,aAAmB9E,MACdgB,KAAKmG,eAAerC,EAASoC,GAE7BlG,KAAK2E,MAAMb,EAAQE,OAAQF,EAAQK,QAAQgB,MAAK,SAAAlB,GACrDiC,EAAG,KAAM,CAAEnC,GAAID,EAAQC,GAAI2B,QAAS5B,EAAQ4B,QAASzB,cACpDwB,OAAM,SAAAH,GACPY,EAAGZ,MATcY,EAAG,IAAIX,MAAM,oBADUW,EAAG,IAAIX,MAAM,0D,4BAc3D,SAAgBzB,EAASoC,GACvB,OAAOlG,KAAKoG,WAAWtC,GAASqB,MAAK,SAACkB,GACpC,IAAIpC,EAASoC,EAAQlE,KAAI,SAACmE,EAAOC,GAC/B,MAAO,CAAExC,GAAID,EAAQyC,GAAOxC,GAAI2B,QAAS5B,EAAQyC,GAAOb,QAASzB,OAAQqC,MAE3EJ,EAAG,KAAMjC,MACRwB,OAAM,SAAAH,GACPY,EAAGZ,Q,yBAGP,WACE,OAAOtF,KAAKyD,Y,mBAEd,WAAS,WACPzD,KAAKwD,WAAWgD,QAChBxG,KAAKyD,WAAY,EACjB,IAAI/C,EAAQ,IAAI6E,MAAJ,+DACZvF,KAAK4D,cAAc6C,SAAQ,SAAA1C,GAAE,OAAI,EAAKhB,KAAKgB,EAAIrD,MAC/CV,KAAK4D,cAAgB,O,GA3IJ9C,EAAQ,KA+I7BjC,EAAOC,QAAU4D,G,4DC/IXD,EAAe3B,EAAQ,IAEvB4F,GAAMC,EAENhE,E,2CACJ,WAAalB,EAAaG,EAASC,GAAS,wBAC1C,gBACKD,QAAUA,EACf,EAAKH,YAAcA,EACnB,EAAKgC,WAAY,EACjB,EAAKX,OAAS,UACd,EAAK8D,SAAW/E,EAAQ+E,UAAY,IACpC,EAAKC,KAAOhF,EAAQgF,MAAQ,UAC5B,EAAK5D,SAAU,EACf,EAAK6D,UATqC,E,iCAY5C,WAAoB,WAAXP,EAAW,uDAAH,EAGf,GAAIvG,KAAKwD,YAAyC,cAA3BxD,KAAKwD,WAAWV,QAA0ByD,GAASvG,KAAKwD,WAAW+C,MACpFG,OACC,GAA4B,IAAxB1G,KAAK4B,QAAQwD,OAClBsB,MACC,CACL,MAA+B1G,KAAK4B,QAAQ2E,GAApClE,EAAR,EAAQA,SAAUN,EAAlB,EAAkBA,SAClB/B,KAAKwD,WAAaxD,KAAKyB,YAAYY,GAAUN,GAE7C/B,KAAKwD,WAAWJ,GAAG,SAAS,SAAAkC,GAC1B,OAAK,EAAK7B,UACN,EAAKmB,cAAc,SAAiB,EAAK7B,KAAK,QAASuC,QAC3D/C,QAAQyC,KAAK,6CAA+CM,EAAIyB,SAFpC,EAAKC,gBAAgBT,EAAOjB,MAK1DtF,KAAKwD,WAAWJ,GAAG,SAAS,SAAC6D,GAC3B,EAAKxD,WAAY,EACjB,EAAKV,KAAK,SACL,EAAKmE,SAAS,EAAKC,aAG1BnH,KAAKwD,WAAWJ,GAAG,WAAW,WAC5B,EAAKI,WAAW4D,OAAS,EAAKxF,QAAQ2E,GACtC,EAAK/C,WAAW+C,MAAQA,EACxB,EAAK3E,QAAQ2E,GAAOzD,OAAS,EAAKU,WAAWV,OAC7C,EAAKW,WAAY,EACjB,EAAKR,SAAU,EAEf,EAAKF,KAAK,cAGZ/C,KAAKwD,WAAWJ,GAAG,QAAQ,SAAAiE,GAAI,OAAI,EAAKtE,KAAK,OAAQsE,MACrDrH,KAAKwD,WAAWJ,GAAG,WAAW,SAAAU,GAAO,OAAI,EAAKf,KAAK,UAAWe,S,qBAIlE,WAAmC,WAA1B8C,EAA0B,uDAAf5G,KAAK4G,SAEvBU,aAAatH,KAAKuH,cAClBvH,KAAKuH,aAAerE,YAAW,kBAAM,EAAK4D,YAAWF,K,6BAGvD,SAAiBL,EAAOjB,GACtBtF,KAAK4B,QAAQ2E,GAAOzD,OAASwC,EACzBtF,KAAK4B,QAAQwD,OAAS,IAAMmB,GAC9BvG,KAAKiD,SAAU,EAEfjD,KAAKmH,WAELnH,KAAK8G,UAAUP,K,mBAInB,WACEvG,KAAKkH,SAAU,EACXlH,KAAKwD,WACPxD,KAAKwD,WAAWgD,QAEhBxG,KAAK+C,KAAK,SAEZuE,aAAatH,KAAKuH,gB,mBAGpB,SAAOzD,EAASiD,GAAoB,IAAXvB,EAAW,wDAAH,EAC/BxF,KAAK+C,KAAK,UAAW,CAAEgB,GAAID,EAAQC,GAAI2B,QAAS5B,EAAQ4B,QAAShF,MAAO,CAAEqG,UAASvB,Y,kBAGrF,SAAM1B,GAAS,WACT9D,KAAKiD,QACPC,YAAW,kBAAM,EAAKC,KAAKW,KAAU,KAC5B9D,KAAKwD,WAAWgE,OACzBxH,KAAKU,MAAMoD,EAAS,iBAEpB9D,KAAKwD,WAAWL,KAAKW,O,GAxFKrB,GA6FhC5D,EAAOC,QAAU6D,G,kBCjGjB9D,EAAOC,QAAU,CACfkC,SAAU,CAAC,YACXyG,MAAO,CAAC,sBAAuB,yBAC/BC,OAAQ,CAAC,sBAAuB,yBAChCC,OAAQ,CAAC,iEAAkE,iEAC3EC,cAAe,CAAC,iEAAkE,iEAClFC,cAAe,CAAC,iEAAkE,iEAClFC,YAAa,CAAC,+DAAgE,iE,mDCL1EC,E,2CACJ,WAAaC,EAAWnG,GAAS,uBAC/B,eACImG,EACF9E,YAAW,kBAAM,EAAKH,KAAK,QAAS,IAAIwC,MAAM,wDAAuD,GAErGrC,YAAW,kBAAM,EAAKH,KAAK,QAAS,IAAIwC,MAAM,iCAAgC,GALjD,E,UAHdzE,EAAQ,KAa7BjC,EAAOC,QAAU,SAAAkC,GAAQ,OAAI,SAAAa,GAAO,OAAI,IAAIkG,EAAmB/G,EAAUa,M,mDCXnEoG,E,2CACJ,WAAalB,GAAS,uBACpB,eACA7D,YAAW,kBAAM,EAAKH,KAAK,QAAS,IAAIwC,MAAMwB,MAAW,GAFrC,E,UAHHjG,EAAQ,KAS7BjC,EAAOC,QAAU,SAAAiI,GAAO,OAAI,kBAAM,IAAIkB,EAAsBlB,M,wBCLxD1F,E,oCAJEoB,EAAe3B,EAAQ,IACvBoH,EAAQpH,EAAQ,KAKhBqH,E,2CACJ,WAAaC,EAAYC,EAAKxG,GAAS,uBACrC,eACAR,EAAY+G,EACZlF,YAAW,kBAAM,EAAKoF,OAAOD,EAAKxG,KAAU,GAHP,E,gCAMvC,SAAQwG,EAAKxG,GAAS,WACfR,GAAWrB,KAAK+C,KAAK,QAAS,IAAIwC,MAAM,qCAC7C,IAAMvF,KAAKuI,OAAS,IAAIlH,EAAUgH,GAAO,MAAO1H,GAAK,OAAOX,KAAK+C,KAAK,QAASpC,GAC/EX,KAAKuI,OAAOC,iBAAiB,SAAS,SAAAlD,GAAG,OAAI,EAAKvC,KAAK,QAASuC,MAChEtF,KAAKuI,OAAOC,iBAAiB,QAAQ,WACnC,EAAKzF,KAAK,WACV,EAAKwF,OAAOC,iBAAiB,WAAW,SAAAzB,GACtC,IAAMM,EAA+B,kBAAjBN,EAAQM,KAAoBN,EAAQM,KAAO,GAC/Da,EAAMb,GAAM,SAAC/B,EAAKmD,GACZnD,GACJmD,EAAShC,SAAQ,SAAAiC,GACX1J,MAAM2J,QAAQD,GAChBA,EAAKjC,SAAQ,SAAA3C,GAAO,OAAI,EAAKf,KAAK,UAAWe,MAE7C,EAAKf,KAAK,UAAW2F,YAK7B,EAAKH,OAAOC,iBAAiB,SAAS,kBAAM,EAAKI,kB,qBAIrD,WACE5I,KAAKuI,OAAS,KACdvI,KAAKwH,QAAS,EAEdxH,KAAK+C,KAAK,SACV/C,KAAKiG,uB,mBAGP,WACMjG,KAAKuI,OACPvI,KAAKuI,OAAO/B,QAEZxG,KAAK4I,Y,mBAIT,SAAO9E,EAASiD,GAAoB,IAAXvB,EAAW,wDAAH,EAC/BxF,KAAK+C,KAAK,UAAW,CAAEgB,GAAID,EAAQC,GAAI2B,QAAS5B,EAAQ4B,QAAShF,MAAO,CAAEqG,UAASvB,Y,kBAGrF,SAAM1B,GAAS,WACT9D,KAAKuI,QAAUvI,KAAKuI,OAAOM,aAAe7I,KAAKuI,OAAOO,WACxD5F,YAAW,SAAA6F,GAAC,OAAI,EAAK5F,KAAKW,KAAU,KAC1B9D,KAAKuI,QAAUvI,KAAKuI,OAAOM,WAAa,GAClD7I,KAAKyD,WAAY,EACjBzD,KAAKU,MAAMoD,EAAS,kBAEpB9D,KAAKuI,OAAOpF,KAAK6F,KAAKC,UAAUnF,Q,GAzDJrB,GA8DlC5D,EAAOC,QAAU,SAAAuC,GAAS,OAAI,SAACgH,EAAKnC,GAAN,OAAa,IAAIiC,EAAoB9G,EAAWgH,EAAKnC,M,kBCpEnF,IAAIgD,EAAMC,EAEVtK,EAAOC,QAAU,SAACsK,EAAKlD,GACrB,IAAMmD,EAAS,GACfD,EACGE,QAAQ,eAAgB,UACxBA,QAAQ,mBAAoB,YAC5BA,QAAQ,iBAAkB,WAC1BA,QAAQ,iBAAkB,WAC1BC,MAAM,QACN9C,SAAQ,SAAAY,GAEP,IAAIpD,EADAiF,IAAM7B,EAAO6B,EAAO7B,GAExB,IACEpD,EAAS+E,KAAKd,MAAMb,GACpB,MAAO1G,GAIP,OAHAuI,EAAO7B,EACPC,aAAa6B,QACbA,EAAUjG,YAAW,kBAAMgD,EAAG,IAAIX,MAAM,6BAA4B,OAGtE+B,aAAa6B,GACbD,EAAO,KACHjF,GAAQoF,EAAOvD,KAAK7B,MAE5BiC,EAAG,KAAMmD,K,wBCpBP/H,E,oCALEmB,EAAe3B,EAAQ,IACvB0I,EAAO1I,EAAQ,KAMf2I,E,2CACJ,WAAaC,EAAMrB,EAAKxG,GAAS,uBAC/B,eACAP,EAAMoI,EACN,EAAKjG,WAAY,EACjB,EAAKG,eAAgB,EACrB,EAAKd,OAAS,UACd,EAAKuF,IAAMA,EACX,EAAKsB,OAASH,IACdtG,YAAW,kBAAM,EAAKoF,WAAU,GARD,E,gCAWjC,WAAU,WACR,IAAKhH,EAAK,OAAOtB,KAAK+C,KAAK,QAAS,IAAIwC,MAAM,gCAC9CvF,KAAKoD,GAAG,SAAS,WAAY,EAAKK,WAAW,EAAK+C,WAClDxG,KAAK4J,S,kBAGP,WAAQ,WACN5J,KAAKmD,KAAK,CAAEuC,QAAS,MAAO1B,OAAQ,cAAeG,OAAQ,GAAIJ,GAAI,IAAK,SAACuB,EAAKuE,GAC5E,GAAIvE,EAAK,OAAO,EAAKvC,KAAK,QAASuC,GACnC,EAAKnC,KAAK,CAAEuC,QAAS,MAAO3B,GAAI,EAAGC,OAAQ,wBAAyBG,OAAQ,CAAC,EAAKwF,OAAQ,eAAgB,SAACrE,EAAKuE,GACzGvE,IACH,EAAK1B,eAAgB,EACrB,EAAKkG,qBAEP,EAAKrG,WAAY,EACjB,EAAKV,KAAK,mB,+BAKhB,WAAqB,WACnB/C,KAAKmD,KAAK,CAAEuC,QAAS,MAAO3B,GAAI,EAAGC,OAAQ,wBAAyBG,OAAQ,CAACnE,KAAK2J,UAAW,SAACrE,EAAKrB,GACjG,GAAIqB,EAEF,OADA,EAAKyE,oBAAsB7G,YAAW,kBAAM,EAAK4G,sBAAqB,KAC/D,EAAK/G,KAAK,QAASuC,GAErB,EAAKkC,SAAQ,EAAKuC,oBAAsB,EAAKD,qBAC9C7F,GACFA,EAAO9B,KAAI,SAAA6H,GACT,IAAI9B,EACJ,IAAMA,EAAQc,KAAKd,MAAM8B,GAAK,MAAOrJ,GAAKuH,GAAQ,EAClD,OAAOA,KACN5F,QAAO,SAAA2H,GAAC,OAAIA,KAAGxD,SAAQ,SAAAuD,GAAC,OAAI,EAAKjH,KAAK,UAAWiH,W,mBAM5D,WAEEhK,KAAKwH,QAAS,EACdxH,KAAK+C,KAAK,SACVuE,aAAatH,KAAK+J,qBAClB/J,KAAKiG,uB,0BAGP,SAAcmD,GACZ,GAAIA,EAAItG,QAAU,KAAOsG,EAAItG,OAAS,IAAK,OAAOsG,EAClD,IAAM1I,EAAQ,IAAI6E,MAAM6D,EAAIc,YAE5B,MADAxJ,EAAM0I,IAAMA,EACN1I,EAAMqG,U,mBAGd,SAAOjD,EAASiD,GAAoB,IAAXvB,EAAW,wDAAH,EAC/BxF,KAAK+C,KAAK,UAAW,CAAEgB,GAAID,EAAQC,GAAI2B,QAAS5B,EAAQ4B,QAAShF,MAAO,CAAEqG,UAASvB,Y,kBAGrF,SAAM1B,EAASqG,GAAU,WACvB,GAAInK,KAAKwH,OAAQ,OAAOxH,KAAKU,MAAMoD,EAAS,iBAC5C,GAAuB,kBAAnBA,EAAQE,OAA4B,CACtC,IAAIhE,KAAK4D,cAGP,OAAO5D,KAAKU,MAAMoD,EAAS,yDAF3BA,EAAQ6F,OAAS3J,KAAK2J,OAK1B,IAAMS,EAAM,IAAI9I,EACZ+I,GAAY,EACVjB,EAAM,SAAC9D,EAAKrB,GAChB,IAAKoG,EAGH,GAFAD,EAAIE,QACJD,GAAY,EACRF,EACFA,EAAS7E,EAAKrB,OACT,CACL,IAAQF,EAAgBD,EAAhBC,GAAI2B,EAAY5B,EAAZ4B,QACNgD,EAAOpD,EAAM,CAAEvB,KAAI2B,UAAShF,MAAO,CAAEqG,QAASzB,EAAIyB,QAASvB,KAAMF,EAAIE,OAAW,CAAEzB,KAAI2B,UAASzB,UACrG,EAAKlB,KAAK,UAAW2F,KAI3B0B,EAAIG,KAAK,OAAQvK,KAAKqI,KAAK,GAC3B+B,EAAII,iBAAiB,eAAgB,oBACrCJ,EAAIjB,QAAU,IACdiB,EAAIK,QAAUrB,EACdgB,EAAIM,UAAYtB,EAChBgB,EAAIO,mBAAqB,WACvB,GAAuB,IAAnBP,EAAIvB,WACN,IACE,IAAMgB,EAAWb,KAAKd,MAAMkC,EAAIQ,cAChCxB,EAAIS,EAASnJ,MAAOmJ,EAAS5F,QAC7B,MAAOtD,GACPyI,EAAIzI,KAIVyJ,EAAIjH,KAAK6F,KAAKC,UAAUnF,Q,GA5GCrB,GAgH7B5D,EAAOC,QAAU,SAAAwC,GAAG,OAAI,SAAC+G,EAAKxG,GAAN,OAAkB,IAAI4H,EAAenI,EAAK+G,EAAKxG,M,oBCvHvE,IAAIgJ,EAAM/J,EAAQ,KACdgK,EAAchK,EAAQ,MA2B1BjC,EAAOC,QAzBP,SAAY+C,EAASrC,EAAKC,GACxB,IAAIP,EAAIM,GAAOC,GAAU,EAEF,iBAAZoC,IACTrC,EAAkB,WAAZqC,EAAuB,IAAI7C,MAAM,IAAM,KAC7C6C,EAAU,MAIZ,IAAI9C,GAFJ8C,EAAUA,GAAW,IAEFzC,SAAWyC,EAAQgJ,KAAOA,KAO7C,GAJA9L,EAAK,GAAgB,GAAVA,EAAK,GAAa,GAC7BA,EAAK,GAAgB,GAAVA,EAAK,GAAa,IAGzBS,EACF,IAAK,IAAIuL,EAAK,EAAGA,EAAK,KAAMA,EAC1BvL,EAAIN,EAAI6L,GAAMhM,EAAKgM,GAIvB,OAAOvL,GAAOsL,EAAY/L","file":"static/js/9.abcfc68c.chunk.js","sourcesContent":["// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","import { AbstractConnectorArguments, ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport ethProvider from 'eth-provider'\nimport invariant from 'tiny-invariant'\n\nexport class UserRejectedRequestError extends Error {\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    this.message = 'The user rejected the request.'\n  }\n}\n\nexport class FrameConnector extends AbstractConnector {\n  private provider: any\n\n  constructor(kwargs: Required<AbstractConnectorArguments>) {\n    invariant(kwargs.supportedChainIds.length === 1, 'This connector only supports 1 chainId at the moment.')\n    super(kwargs)\n\n    this.handleNetworkChanged = this.handleNetworkChanged.bind(this)\n    this.handleChainChanged = this.handleChainChanged.bind(this)\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this)\n    this.handleClose = this.handleClose.bind(this)\n  }\n\n  private handleNetworkChanged(networkId: string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'networkChanged' event with payload\", networkId)\n    }\n    this.emitUpdate({ provider: this.provider, chainId: networkId })\n  }\n\n  private handleChainChanged(chainId: string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'chainChanged' event with payload\", chainId)\n    }\n    this.emitUpdate({ chainId })\n  }\n\n  private handleAccountsChanged(accounts: string[]): void {\n    if (__DEV__) {\n      console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n    }\n    this.emitUpdate({ account: accounts.length === 0 ? null : accounts[0] })\n  }\n\n  private handleClose(code: number, reason: string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'close' event with payload\", code, reason)\n    }\n    this.emitDeactivate()\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    if (!this.provider) {\n      this.provider = ethProvider('frame')\n    }\n\n    this.provider\n      .on('networkChanged', this.handleNetworkChanged)\n      .on('chainChanged', this.handleChainChanged)\n      .on('accountsChanged', this.handleAccountsChanged)\n      .on('close', this.handleClose)\n\n    const account = await this.provider\n      .enable()\n      .then((accounts: string[]): string => accounts[0])\n      .catch((error: Error): void => {\n        if (error && (error as any).code === 4001) {\n          throw new UserRejectedRequestError()\n        } else {\n          throw error\n        }\n      })\n\n    return { provider: this.provider, account }\n  }\n\n  public async getProvider(): Promise<any> {\n    return this.provider\n  }\n\n  public async getChainId(): Promise<number> {\n    return this.provider.send('eth_chainId')\n  }\n\n  public async getAccount(): Promise<null> {\n    return this.provider.send('eth_accounts').then((accounts: string[]): string => accounts[0])\n  }\n\n  public deactivate() {\n    this.provider\n      .removeListener('networkChanged', this.handleNetworkChanged)\n      .removeListener('chainChanged', this.handleChainChanged)\n      .removeListener('accountsChanged', this.handleAccountsChanged)\n      .removeListener('close', this.handleClose)\n  }\n}\n","const resolve = require('./resolve')\nconst provider = require('./provider')\nconst presets = require('./presets')\n\nconst injected = {\n  ethereum: typeof window !== 'undefined' && typeof window.ethereum !== 'undefined' ? window.ethereum : null,\n  web3: typeof window !== 'undefined' && typeof window.web3 !== 'undefined' ? window.web3.currentProvider : null\n}\nconst ws = typeof window !== 'undefined' && typeof window.WebSocket !== 'undefined' ? window.WebSocket : null\nconst XHR = typeof window !== 'undefined' && typeof window.XMLHttpRequest !== 'undefined' ? window.XMLHttpRequest : null\n\nif (injected.ethereum) injected.ethereum.__isProvider = true\n\nconst connections = {\n  injected: injected.ethereum || require('./connections/injected')(injected.web3),\n  ipc: require('./connections/unavailable')('IPC connections are unavliable in the browser'),\n  ws: require('./connections/ws')(ws),\n  http: require('./connections/http')(XHR)\n}\n\nmodule.exports = (targets = ['injected', 'frame'], options = {}) => provider(connections, resolve(targets, presets), options)\n","const getProtocol = location => {\n  if (location === 'injected') return 'injected'\n  if (location.endsWith('.ipc')) return 'ipc'\n  if (location.startsWith('wss://') || location.startsWith('ws://')) return 'ws'\n  if (location.startsWith('https://') || location.startsWith('http://')) return 'http'\n  return ''\n}\n\nmodule.exports = (targets, presets) => {\n  return [].concat(...[].concat(targets).map(provider => {\n    if (presets[provider]) {\n      return presets[provider].map(location => ({ type: provider, location, protocol: getProtocol(location) }))\n    } else {\n      return { type: 'custom', location: provider, protocol: getProtocol(provider) }\n    }\n  })).filter(provider => {\n    if (provider.protocol || provider.type === 'injected') {\n      return true\n    } else {\n      console.log('eth-provider | Invalid provider preset/location: \"' + provider.location + '\"')\n      return false\n    }\n  })\n}\n","const EventEmitter = require('events')\nconst EthereumProvider = require('ethereum-provider')\nconst ConnectionManager = require('../ConnectionManager')\n\nconst monitor = provider => {\n  function update (status) {\n    provider.status = status\n    if (provider instanceof EventEmitter) provider.emit('status', status)\n  }\n  async function check () {\n    if (provider.inSetup) return setTimeout(check, 1000)\n    try {\n      if (await provider.send('eth_syncing')) {\n        update('syncing')\n        setTimeout(() => check(), 5000)\n      } else {\n        update('connected')\n      }\n    } catch (e) {\n      update('disconnected')\n    }\n  }\n  update('loading')\n  check()\n  provider.on('connect', () => check())\n  provider.on('close', () => update('disconnected'))\n  return provider\n}\n\nmodule.exports = (connections, targets, options) => {\n  // If window.ethereum and injected is a target in any priority, return ethereum provider\n  if (connections.injected.__isProvider && targets.map(t => t.type).indexOf('injected') > -1) {\n    delete connections.injected.__isProvider\n    return monitor(connections.injected)\n  }\n  const provider = new EthereumProvider(new ConnectionManager(connections, targets, options))\n  provider.setMaxListeners(128)\n  return monitor(provider)\n}\n","const EventEmitter = require('events')\n\nclass EthereumProvider extends EventEmitter {\n  constructor (connection) {\n    super()\n    this.connected = false\n    this.nextId = 0\n    this.promises = {}\n    this.subscriptions = []\n    this.connection = connection\n    this.connection.on('connect', () => this.checkConnection())\n    this.connection.on('close', () => this.emit('close'))\n    this.connection.on('payload', payload => {\n      const { id, method, error, result } = payload\n      if (typeof id !== 'undefined') {\n        if (this.promises[id]) { // Fulfill promise\n          payload.error ? this.promises[id].reject(error) : this.promises[id].resolve(result)\n          delete this.promises[id]\n        }\n      } else if (method && method.indexOf('_subscription') > -1) { // Emit subscription result\n        this.emit(payload.params.subscription, payload.params.result)\n        this.emit(method, payload.params) // Latest EIP-1193\n        this.emit('data', payload) // Backwards Compatibility\n      }\n    })\n    this.on('newListener', (event, listener) => {\n      if (event === 'networkChanged') {\n        if (!this.attemptedNetworkSubscription && this.connected) this.startNetworkSubscription()\n      } else if (event === 'accountsChanged') {\n        if (!this.attemptedAccountsSubscription && this.connected) this.startAccountsSubscription()\n      }\n    })\n  }\n  async checkConnection () {\n    try {\n      this.emit('connect', await this._send('net_version'))\n      this.connected = true\n      if (this.listenerCount('networkChanged') && !this.attemptedNetworkSubscription) this.startNetworkSubscription()\n      if (this.listenerCount('accountsChanged') && !this.attemptedAccountsSubscription) this.startAccountsSubscription()\n    } catch (e) {\n      this.connected = false\n    }\n  }\n  async startNetworkSubscription () {\n    this.attemptedNetworkSubscription = true\n    try {\n      let networkChanged = await this.subscribe('eth_subscribe', 'networkChanged')\n      this.on(networkChanged, netId => this.emit('networkChanged', netId))\n    } catch (e) {\n      console.warn('Unable to subscribe to networkChanged', e)\n    }\n  }\n  async startAccountsSubscription () {\n    this.attemptedAccountsSubscription = true\n    try {\n      let accountsChanged = await this.subscribe('eth_subscribe', 'accountsChanged')\n      this.on(accountsChanged, accounts => this.emit('accountsChanged', accounts))\n    } catch (e) {\n      console.warn('Unable to subscribe to accountsChanged', e)\n    }\n  }\n  enable () {\n    return new Promise((resolve, reject) => {\n      this._send('eth_accounts').then(accounts => {\n        if (accounts.length > 0) {\n          this.accounts = accounts\n          this.coinbase = accounts[0]\n          this.emit('enable')\n          resolve(accounts)\n        } else {\n          const err = new Error('User Denied Full Provider')\n          err.code = 4001\n          reject(err)\n        }\n      }).catch(reject)\n    })\n  }\n  _send (method, params = []) {\n    if (!method || typeof method !== 'string') return new Error('Method is not a valid string.')\n    if (!(params instanceof Array)) return new Error('Params is not a valid array.')\n    const payload = { jsonrpc: '2.0', id: this.nextId++, method, params }\n    const promise = new Promise((resolve, reject) => { this.promises[payload.id] = { resolve, reject } })\n    this.connection.send(payload)\n    return promise\n  }\n  send (...args) { // Send can be clobbered, proxy sendPromise for backwards compatibility\n    return this._send(...args)\n  }\n  _sendBatch (requests) {\n    return Promise.all(requests.map(payload => this._send(payload.method, payload.params)))\n  }\n  subscribe (type, method, params = []) {\n    return this._send(type, [method, ...params]).then(id => {\n      this.subscriptions.push(id)\n      return id\n    })\n  }\n  unsubscribe (type, id) {\n    return this._send(type, [id]).then(success => {\n      if (success) {\n        this.subscriptions = this.subscriptions.filter(_id => _id !== id) // Remove subscription\n        this.removeAllListeners(id) // Remove listeners\n        return success\n      }\n    })\n  }\n  sendAsync (payload, cb) { // Backwards Compatibility\n    if (!cb || typeof cb !== 'function') return cb(new Error('Invalid or undefined callback provided to sendAsync'))\n    if (!payload) return cb(new Error('Invalid Payload'))\n    // sendAsync can be called with an array for batch requests used by web3.js 0.x\n    // this is not part of EIP-1193's backwards compatibility but we still want to support it\n    if (payload instanceof Array) {\n      return this.sendAsyncBatch(payload, cb)\n    } else {\n      return this._send(payload.method, payload.params).then(result => {\n        cb(null, { id: payload.id, jsonrpc: payload.jsonrpc, result })\n      }).catch(err => {\n        cb(err)\n      })\n    }\n  }\n  sendAsyncBatch (payload, cb) {\n    return this._sendBatch(payload).then((results) => {\n      let result = results.map((entry, index) => {\n        return { id: payload[index].id, jsonrpc: payload[index].jsonrpc, result: entry }\n      })\n      cb(null, result)\n    }).catch(err => {\n      cb(err)\n    })\n  }\n  isConnected () { // Backwards Compatibility\n    return this.connected\n  }\n  close () {\n    this.connection.close()\n    this.connected = false\n    let error = new Error(`Provider closed, subscription lost, please subscribe again.`)\n    this.subscriptions.forEach(id => this.emit(id, error)) // Send Error objects to any open subscriptions\n    this.subscriptions = [] // Clear subscriptions\n  }\n}\n\nmodule.exports = EthereumProvider\n","const EventEmitter = require('events')\n\nconst dev = process.env.NODE_ENV === 'development'\n\nclass ConnectionManager extends EventEmitter {\n  constructor (connections, targets, options) {\n    super()\n    this.targets = targets\n    this.connections = connections\n    this.connected = false\n    this.status = 'loading'\n    this.interval = options.interval || 5000\n    this.name = options.name || 'default'\n    this.inSetup = true\n    this.connect()\n  }\n\n  connect (index = 0) {\n    if (dev && index === 0) console.log(`\\n\\n\\n\\nA connection cycle started for provider with name: ${this.name}`)\n\n    if (this.connection && this.connection.status === 'connected' && index >= this.connection.index) {\n      if (dev) console.log('Stopping connection cycle becasuse we\\'re already connected to a higher priority provider')\n    } else if (this.targets.length === 0) {\n      if (dev) console.log('No valid targets supplied')\n    } else {\n      const { protocol, location } = this.targets[index]\n      this.connection = this.connections[protocol](location)\n\n      this.connection.on('error', err => {\n        if (!this.connected) return this.connectionError(index, err)\n        if (this.listenerCount('error')) return this.emit('error', err)\n        console.warn('eth-provider - Uncaught connection error: ' + err.message)\n      })\n\n      this.connection.on('close', (summary) => {\n        this.connected = false\n        this.emit('close')\n        if (!this.closing) this.refresh()\n      })\n\n      this.connection.on('connect', () => {\n        this.connection.target = this.targets[index]\n        this.connection.index = index\n        this.targets[index].status = this.connection.status\n        this.connected = true\n        this.inSetup = false\n        if (dev) console.log('Successfully connected to: ' + this.targets[index].location)\n        this.emit('connect')\n      })\n\n      this.connection.on('data', data => this.emit('data', data))\n      this.connection.on('payload', payload => this.emit('payload', payload))\n    }\n  }\n\n  refresh (interval = this.interval) {\n    if (dev) console.log(`Reconnect queued for ${(interval / 1000).toFixed(2)}s in the future`)\n    clearTimeout(this.connectTimer)\n    this.connectTimer = setTimeout(() => this.connect(), interval)\n  }\n\n  connectionError (index, err) {\n    this.targets[index].status = err\n    if (this.targets.length - 1 === index) {\n      this.inSetup = false\n      if (dev) console.warn('eth-provider unable to connect to any targets, view connection cycle summary: ', this.targets)\n      this.refresh()\n    } else { // Not last target, move on the next connection option\n      this.connect(++index)\n    }\n  }\n\n  close () {\n    this.closing = true\n    if (this.connection) {\n      this.connection.close() // Let event bubble from here\n    } else {\n      this.emit('close')\n    }\n    clearTimeout(this.connectTimer)\n  }\n\n  error (payload, message, code = -1) {\n    this.emit('payload', { id: payload.id, jsonrpc: payload.jsonrpc, error: { message, code } })\n  }\n\n  send (payload) {\n    if (this.inSetup) {\n      setTimeout(() => this.send(payload), 100)\n    } else if (this.connection.closed) {\n      this.error(payload, 'Not connected')\n    } else {\n      this.connection.send(payload)\n    }\n  }\n}\n\nmodule.exports = ConnectionManager\n","module.exports = {\n  injected: ['injected'],\n  frame: ['ws://127.0.0.1:1248', 'http://127.0.0.1:1248'],\n  direct: ['ws://127.0.0.1:8546', 'http://127.0.0.1:8545'], // IPC paths will be prepended in Node/Electron\n  infura: ['wss://mainnet.infura.io/ws/v3/786ade30f36244469480aa5c2bf0743b', 'https://mainnet.infura.io/v3/786ade30f36244469480aa5c2bf0743b'],\n  infuraRopsten: ['wss://ropsten.infura.io/ws/v3/786ade30f36244469480aa5c2bf0743b', 'https://ropsten.infura.io/v3/786ade30f36244469480aa5c2bf0743b'],\n  infuraRinkeby: ['wss://rinkeby.infura.io/ws/v3/786ade30f36244469480aa5c2bf0743b', 'https://rinkeby.infura.io/v3/786ade30f36244469480aa5c2bf0743b'],\n  infuraKovan: ['wss://kovan.infura.io/ws/v3/786ade30f36244469480aa5c2bf0743b', 'https://kovan.infura.io/v3/786ade30f36244469480aa5c2bf0743b']\n}\n","const EventEmitter = require('events')\n\nclass InjectedConnection extends EventEmitter {\n  constructor (_injected, options) {\n    super()\n    if (_injected) {\n      setTimeout(() => this.emit('error', new Error('Injected web3 provider is not currently supported')), 0)\n    } else {\n      setTimeout(() => this.emit('error', new Error('No injected provider found')), 0)\n    }\n  }\n}\n\nmodule.exports = injected => options => new InjectedConnection(injected, options)\n","const EventEmitter = require('events')\n\nclass UnavailableConnection extends EventEmitter {\n  constructor (message) {\n    super()\n    setTimeout(() => this.emit('error', new Error(message)), 0)\n  }\n}\n\nmodule.exports = message => () => new UnavailableConnection(message)\n","const EventEmitter = require('events')\nconst parse = require('../parse')\nconst dev = process.env.NODE_ENV === 'development'\n\nlet WebSocket\n\nclass WebSocketConnection extends EventEmitter {\n  constructor (_WebSocket, url, options) {\n    super()\n    WebSocket = _WebSocket\n    setTimeout(() => this.create(url, options), 0)\n  }\n\n  create (url, options) {\n    if (!WebSocket) this.emit('error', new Error('No WebSocket transport available'))\n    try { this.socket = new WebSocket(url) } catch (e) { return this.emit('error', e) }\n    this.socket.addEventListener('error', err => this.emit('error', err))\n    this.socket.addEventListener('open', () => {\n      this.emit('connect')\n      this.socket.addEventListener('message', message => {\n        const data = typeof message.data === 'string' ? message.data : ''\n        parse(data, (err, payloads) => {\n          if (err) return //\n          payloads.forEach(load => {\n            if (Array.isArray(load)) {\n              load.forEach(payload => this.emit('payload', payload))\n            } else {\n              this.emit('payload', load)\n            }\n          })\n        })\n      })\n      this.socket.addEventListener('close', () => this.onClose())\n    })\n  }\n\n  onClose () {\n    this.socket = null\n    this.closed = true\n    if (dev) console.log('Closing WebSocket connection')\n    this.emit('close')\n    this.removeAllListeners()\n  }\n\n  close () {\n    if (this.socket) {\n      this.socket.close()\n    } else {\n      this.onClose()\n    }\n  }\n\n  error (payload, message, code = -1) {\n    this.emit('payload', { id: payload.id, jsonrpc: payload.jsonrpc, error: { message, code } })\n  }\n\n  send (payload) {\n    if (this.socket && this.socket.readyState === this.socket.CONNECTING) {\n      setTimeout(_ => this.send(payload), 10)\n    } else if (!this.socket || this.socket.readyState > 1) {\n      this.connected = false\n      this.error(payload, 'Not connected')\n    } else {\n      this.socket.send(JSON.stringify(payload))\n    }\n  }\n}\n\nmodule.exports = WebSocket => (url, cb) => new WebSocketConnection(WebSocket, url, cb)\n","let last, timeout\n\nmodule.exports = (res, cb) => {\n  const values = []\n  res\n    .replace(/\\}[\\n\\r]?\\{/g, '}|--|{') // }{\n    .replace(/\\}\\][\\n\\r]?\\[\\{/g, '}]|--|[{') // }][{\n    .replace(/\\}[\\n\\r]?\\[\\{/g, '}|--|[{') // }[{\n    .replace(/\\}\\][\\n\\r]?\\{/g, '}]|--|{') // }]{\n    .split('|--|')\n    .forEach(data => {\n      if (last) data = last + data // prepend the last chunk\n      let result\n      try {\n        result = JSON.parse(data)\n      } catch (e) {\n        last = data\n        clearTimeout(timeout) // restart timeout\n        timeout = setTimeout(() => cb(new Error('Parse response timeout')), 15 * 1000)\n        return\n      }\n      clearTimeout(timeout)\n      last = null\n      if (result) values.push(result)\n    })\n  cb(null, values)\n}\n","const EventEmitter = require('events')\nconst uuid = require('uuid/v4')\n\nconst dev = process.env.NODE_ENV === 'development'\n\nlet XHR\n\nclass HTTPConnection extends EventEmitter {\n  constructor (_XHR, url, options) {\n    super()\n    XHR = _XHR\n    this.connected = false\n    this.subscriptions = false\n    this.status = 'loading'\n    this.url = url\n    this.pollId = uuid()\n    setTimeout(() => this.create(), 0)\n  }\n\n  create () {\n    if (!XHR) return this.emit('error', new Error('No HTTP transport available'))\n    this.on('error', () => { if (this.connected) this.close() })\n    this.init()\n  }\n\n  init () {\n    this.send({ jsonrpc: '2.0', method: 'eth_syncing', params: [], id: 1 }, (err, response) => {\n      if (err) return this.emit('error', err)\n      this.send({ jsonrpc: '2.0', id: 1, method: 'eth_pollSubscriptions', params: [this.pollId, 'immediate'] }, (err, response) => {\n        if (!err) {\n          this.subscriptions = true\n          this.pollSubscriptions()\n        }\n        this.connected = true\n        this.emit('connect')\n      })\n    })\n  }\n\n  pollSubscriptions () {\n    this.send({ jsonrpc: '2.0', id: 1, method: 'eth_pollSubscriptions', params: [this.pollId] }, (err, result) => {\n      if (err) {\n        this.subscriptionTimeout = setTimeout(() => this.pollSubscriptions(), 10000)\n        return this.emit('error', err)\n      } else {\n        if (!this.closed) this.subscriptionTimeout = this.pollSubscriptions()\n        if (result) {\n          result.map(p => {\n            let parse\n            try { parse = JSON.parse(p) } catch (e) { parse = false }\n            return parse\n          }).filter(n => n).forEach(p => this.emit('payload', p))\n        }\n      }\n    })\n  }\n\n  close () {\n    if (dev) console.log('Closing HTTP connection')\n    this.closed = true\n    this.emit('close')\n    clearTimeout(this.subscriptionTimeout)\n    this.removeAllListeners()\n  }\n\n  filterStatus (res) {\n    if (res.status >= 200 && res.status < 300) return res\n    const error = new Error(res.statusText)\n    error.res = res\n    throw error.message\n  }\n\n  error (payload, message, code = -1) {\n    this.emit('payload', { id: payload.id, jsonrpc: payload.jsonrpc, error: { message, code } })\n  }\n\n  send (payload, internal) {\n    if (this.closed) return this.error(payload, 'Not connected')\n    if (payload.method === 'eth_subscribe') {\n      if (this.subscriptions) {\n        payload.pollId = this.pollId\n      } else {\n        return this.error(payload, 'Subscriptions are not supported by this HTTP endpoint')\n      }\n    }\n    const xhr = new XHR()\n    let responded = false\n    const res = (err, result) => {\n      if (!responded) {\n        xhr.abort()\n        responded = true\n        if (internal) {\n          internal(err, result)\n        } else {\n          const { id, jsonrpc } = payload\n          const load = err ? { id, jsonrpc, error: { message: err.message, code: err.code } } : { id, jsonrpc, result }\n          this.emit('payload', load)\n        }\n      }\n    }\n    xhr.open('POST', this.url, true)\n    xhr.setRequestHeader('Content-Type', 'application/json')\n    xhr.timeout = 60 * 1000\n    xhr.onerror = res\n    xhr.ontimeout = res\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === 4) {\n        try {\n          const response = JSON.parse(xhr.responseText)\n          res(response.error, response.result)\n        } catch (e) {\n          res(e)\n        }\n      }\n    }\n    xhr.send(JSON.stringify(payload))\n  }\n}\n\nmodule.exports = XHR => (url, options) => new HTTPConnection(XHR, url, options)\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n"],"sourceRoot":""}